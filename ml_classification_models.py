# -*- coding: utf-8 -*-
"""ML-models.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/186LWOo_lIp0lJlU3gxqglXXcmY8ZOXKm
"""

import tensorflow as tf 
from tensorflow import keras
import pandas as pd
import sklearn
import matplotlib as plt
import seaborn as sns

df= pd.read_csv("../input/heart-disease-uci/heart.csv")
df.head()

df.info()

# Univariate Analysis

fig = plt.figure(figsize=(24,15))
i=0
for column in df:
  sub = fig.add_subplot(3,5,i + 1)
  sub.set_xlabel(column)
  df[column].plot(kind= 'hist')
  i=i+1

df.describe()

# bar plot

cat_list = ['sex', 'cp', 'fbs', 'restecg' , 'exang', 'slope', 'ca', 'thal' ]
fig=plt.figure(figsize =(16,8))

for i in range(len(cat_list)):
  column = cat_list[i]
  sub = fig.add_subplot(2, 4, i+1)
  chart=sns.countplot(data=df, x=column, hue= 'target', palette= 'RdYlBu')

# box plot

num_list = ['age', 'trestbps', 'chol', 'thalach', 'oldpeak']
fig=plt.figure(figsize=(15,10))

for i in range(len(num_list)):
  column=num_list[i]
  sub= fig.add_subplot(2,3,i+1)
  sns.boxplot(x= 'target', y = column, data=df, palette="RdYlBu_r")

# split data

from sklearn.model_selection import train_test_split
from sklearn import preprocessing
X = df.drop(['target'], axis=1)
y = df["target"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)

# machine learning model_pipeline
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.neighbors import KNeighborsClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.naive_bayes import GaussianNB

model_pipeline=[]

model_pipeline.append(LogisticRegression(solver='liblinear'))
model_pipeline.append(SVC())
model_pipeline.append(KNeighborsClassifier())
model_pipeline.append(DecisionTreeClassifier())
model_pipeline.append(RandomForestClassifier())
model_pipeline.append(GaussianNB())

# Model Evaluation

from sklearn import metrics
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix

model_list = ['Logistic Regression', 'SVM', 'KNN', 'Decision Tree', 'Random Forest', 'Naive Bayes']

acc_list=[]
auc_list=[]
cm_list =[]

for model in model_pipeline:
  model.fit(X_train,y_train)
  y_pred = model.predict(X_test)
  acc_list.append(metrics.accuracy_score(y_test,y_pred)
  fpr, tpr, _thresholds =metrics.roc_curve(y_test,y_pred)
  auc_list.append(round(metrics.auc(fpr,tpr),2))
  cm_list.append(confusion_matrix(y_test,y_pred))

## plot confusion matrix
fig= plt.figure(figsize=(18,10))

for i in range(len(cm_list):
  cm=cm_list[i]
  model=model_list[i]
  sub=fig.add_subplot(2,3,i+1).set_title(model)
  cm_plot=sns.heatmap(cm,annot=True,cmap = 'Blues_r')
  cm_plot.set_xlabel( 'Predicted Values')
  cm_plot.set_ylabel('Actual Values')

## accuracy and AUC
result_df = pd.DataFrame({'Model' :model_list, 'Accuracy': acc_list,'AUC':auc_list})
result_df

